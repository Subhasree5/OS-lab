#include <stdio.h>

int main() {
    int p[20], bt[20], wt[20], tat[20], i, k, n, temp;
    float wtavg, tatavg;

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    for (i = 0; i < n; i++) {
        p[i] = i + 1; // Process numbers start from 1
        printf("Enter burst time for process '%d': ", i + 1);
        scanf("%d", &bt[i]);
    }

    // Sorting based on Burst Time (SJF Non-Preemptive)
    for (i = 0; i < n - 1; i++) {
        for (k = i + 1; k < n; k++) {
            if (bt[i] > bt[k]) {
                // Swap burst time
                temp = bt[i];
                bt[i] = bt[k];
                bt[k] = temp;
                // Swap process number
                temp = p[i];
                p[i] = p[k];
                p[k] = temp;
            }
        }
    }

    wt[0] = 0; // First process has no waiting time
    wtavg = 0;
    tat[0] = bt[0];
    tatavg = tat[0];

    for (i = 1; i < n; i++) {
        wt[i] = wt[i - 1] + bt[i - 1]; // Waiting time formula
        tat[i] = wt[i] + bt[i]; // Turnaround time formula
        wtavg += wt[i];
        tatavg += tat[i];
    }

    printf("\n\tPROCESS\t BURST TIME\t WAITING TIME\t TURNAROUND TIME\n");
    for (i = 0; i < n; i++) {
        printf("\n\t p%d \t\t %d\t\t %d \t\t %d", p[i], bt[i], wt[i], tat[i]);
    }

    printf("\n\nAverage Waiting Time: %.2f", wtavg / n);
    printf("\nAverage Turnaround Time: %.2f\n", tatavg / n);

    return 0;
}

//input
Enter the number of processes: 4
Enter burst time for process '1': 6
Enter burst time for process '2': 8
Enter burst time for process '3': 7
Enter burst time for process '4': 3

//output
PROCESS	 BURST TIME	 WAITING TIME	 TURNAROUND TIME

	 p4 		 3		 0 		 3
	 p1 		 6		 3 		 9
	 p3 		 7		 9 		 16
	 p2 		 8		 16 		 24

Average Waiting Time: 7.00
Average Turnaround Time: 13.00
